- content_for :crop_tool do
  = render partial: 'crop_tool/canvas', locals: { image: object.avatar.url(:original) }

ruby:
  crop_data_1x1 = {
    url:     url_for([:avatar_crop_1x1, object]),
    source:  object.avatar.url(:original),
    holder:  { width: 500 },
    preview: { width: 100, height: 100 },
    callback_handler: "AvatarCrop.crop_tool_callback"
  }

= form_for object, html: { enctype: 'multipart/form-data', class: '' } do |f|
  .mb15.fs16.b = t('avatar.change', scope: :user_room)

  .clearfix.js-main_image-manage_intro
    .pull-left
      .pull-left.mr10
        = image_tag (object.avatar.url(:v100x100)),
          class: 'js-main_image-v1x1 js-user_avatar-v1x1 w100'

      .pull-left
        = link_to jsvoid,
          class: 'js-crop_tool-open ptz_btn ptz_size-14 mr15 pt5 pb5 pr10 pl10',
          data: crop_data_1x1 do
            .fa.fa-crop.fs18

        = link_to [:avatar_rotate_left, object],
          method: :patch,
          class: 'ptz_btn ptz_size-14 mr15 pt5 pb5 pr10 pl10' do
            .fa.fa-undo.fs18

        = link_to [:avatar_rotate_right, object],
          method: :patch,
          class: 'ptz_btn ptz_size-14 mr15 pt5 pb5 pr10 pl10' do
            .fa.fa-repeat.fs18

    .pull-right
      = link_to [:avatar_delete, object],
        method: :delete,
        class: 'ptz_btn ptz_size-14 pt5 pb5 pr10 pl10' do
          .fa.fa-trash.fs18
